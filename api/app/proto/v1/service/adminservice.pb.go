// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/protobuf/v1/service/adminservice.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetAccountsRequest struct {
}

func (m *GetAccountsRequest) Reset()                    { *m = GetAccountsRequest{} }
func (m *GetAccountsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountsRequest) ProtoMessage()               {}
func (*GetAccountsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type GetAccountsResponse struct {
	Accounts []*GetAccountsResponse_Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *GetAccountsResponse) Reset()                    { *m = GetAccountsResponse{} }
func (m *GetAccountsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAccountsResponse) ProtoMessage()               {}
func (*GetAccountsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetAccountsResponse) GetAccounts() []*GetAccountsResponse_Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type GetAccountsResponse_Account struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetAccountsResponse_Account) Reset()                    { *m = GetAccountsResponse_Account{} }
func (m *GetAccountsResponse_Account) String() string            { return proto.CompactTextString(m) }
func (*GetAccountsResponse_Account) ProtoMessage()               {}
func (*GetAccountsResponse_Account) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

func (m *GetAccountsResponse_Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateAccountRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *CreateAccountRequest) Reset()                    { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()               {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *CreateAccountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CreateAccountResponse struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *CreateAccountResponse) Reset()                    { *m = CreateAccountResponse{} }
func (m *CreateAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountResponse) ProtoMessage()               {}
func (*CreateAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CreateAccountResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*GetAccountsRequest)(nil), "service.GetAccountsRequest")
	proto.RegisterType((*GetAccountsResponse)(nil), "service.GetAccountsResponse")
	proto.RegisterType((*GetAccountsResponse_Account)(nil), "service.GetAccountsResponse.Account")
	proto.RegisterType((*CreateAccountRequest)(nil), "service.CreateAccountRequest")
	proto.RegisterType((*CreateAccountResponse)(nil), "service.CreateAccountResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AdminService service

type AdminServiceClient interface {
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error)
	GetAccounts(ctx context.Context, in *GetAccountsRequest, opts ...grpc.CallOption) (*GetAccountsResponse, error)
}

type adminServiceClient struct {
	cc *grpc.ClientConn
}

func NewAdminServiceClient(cc *grpc.ClientConn) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error) {
	out := new(CreateAccountResponse)
	err := grpc.Invoke(ctx, "/service.AdminService/CreateAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) GetAccounts(ctx context.Context, in *GetAccountsRequest, opts ...grpc.CallOption) (*GetAccountsResponse, error) {
	out := new(GetAccountsResponse)
	err := grpc.Invoke(ctx, "/service.AdminService/GetAccounts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AdminService service

type AdminServiceServer interface {
	CreateAccount(context.Context, *CreateAccountRequest) (*CreateAccountResponse, error)
	GetAccounts(context.Context, *GetAccountsRequest) (*GetAccountsResponse, error)
}

func RegisterAdminServiceServer(s *grpc.Server, srv AdminServiceServer) {
	s.RegisterService(&_AdminService_serviceDesc, srv)
}

func _AdminService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdminService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_GetAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).GetAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.AdminService/GetAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).GetAccounts(ctx, req.(*GetAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _AdminService_CreateAccount_Handler,
		},
		{
			MethodName: "GetAccounts",
			Handler:    _AdminService_GetAccounts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/protobuf/v1/service/adminservice.proto",
}

func init() { proto.RegisterFile("proto/protobuf/v1/service/adminservice.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x07, 0x93, 0x49, 0xa5, 0x69, 0xfa, 0x65, 0x86, 0xfa, 0xc5, 0xa9, 0x45, 0x65, 0x99,
	0xc9, 0xa9, 0xfa, 0x89, 0x29, 0xb9, 0x99, 0x79, 0x50, 0x8e, 0x1e, 0x58, 0x81, 0x10, 0x3b, 0x94,
	0x2b, 0x25, 0x93, 0x9e, 0x9f, 0x9f, 0x9e, 0x93, 0xaa, 0x9f, 0x58, 0x90, 0xa9, 0x9f, 0x98, 0x97,
	0x97, 0x5f, 0x92, 0x58, 0x92, 0x99, 0x9f, 0x57, 0x0c, 0x51, 0xa6, 0x24, 0xc2, 0x25, 0xe4, 0x9e,
	0x5a, 0xe2, 0x98, 0x9c, 0x9c, 0x5f, 0x9a, 0x57, 0x52, 0x1c, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c,
	0xa2, 0x54, 0xc4, 0x25, 0x8c, 0x22, 0x5a, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0xe4, 0xc0, 0xc5,
	0x91, 0x08, 0x15, 0x93, 0x60, 0x54, 0x60, 0xd6, 0xe0, 0x36, 0x52, 0xd1, 0x83, 0xd9, 0x8a, 0x45,
	0xbd, 0x1e, 0x54, 0x20, 0x08, 0xae, 0x4b, 0x4a, 0x92, 0x8b, 0x1d, 0x2a, 0x28, 0xc4, 0xc7, 0xc5,
	0x94, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0xc4, 0x94, 0x99, 0xa2, 0xe4, 0xc4, 0x25,
	0xe2, 0x5c, 0x94, 0x9a, 0x58, 0x92, 0x0a, 0xd3, 0x05, 0x71, 0x0b, 0xba, 0x3a, 0x21, 0x29, 0x2e,
	0x8e, 0x82, 0xc4, 0xe2, 0xe2, 0xf2, 0xfc, 0xa2, 0x14, 0x09, 0x26, 0xb0, 0x28, 0x9c, 0xaf, 0xa4,
	0xc9, 0x25, 0x8a, 0x66, 0x06, 0xd4, 0xe5, 0x02, 0x5c, 0xcc, 0xb9, 0xc5, 0xe9, 0x50, 0x53, 0x40,
	0x4c, 0xa3, 0xeb, 0x8c, 0x5c, 0x3c, 0x8e, 0xa0, 0x60, 0x0b, 0x86, 0x78, 0x40, 0x28, 0x9d, 0x8b,
	0x17, 0x45, 0xaf, 0x90, 0x2c, 0xdc, 0x6f, 0xd8, 0xdc, 0x25, 0x25, 0x87, 0x4b, 0x1a, 0x62, 0xa5,
	0x92, 0x78, 0xd3, 0xe5, 0x27, 0x93, 0x99, 0x04, 0x95, 0x78, 0x40, 0x11, 0x05, 0x0b, 0x00, 0x2b,
	0x46, 0x2d, 0xa1, 0x38, 0x2e, 0x6e, 0xa4, 0xc0, 0x12, 0x92, 0xc6, 0x1e, 0x84, 0x10, 0x4b, 0x64,
	0xf0, 0x85, 0xaf, 0x92, 0x08, 0xd8, 0x0a, 0x3e, 0x21, 0x14, 0x2b, 0x9c, 0xa4, 0xa3, 0x24, 0x71,
	0xa6, 0x94, 0x24, 0x36, 0xb0, 0xa0, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x3d, 0x90, 0xd1,
	0x4d, 0x02, 0x00, 0x00,
}
