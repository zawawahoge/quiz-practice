// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/zawawahoge/quiz-practice/api/app/proto/v1/service (interfaces: AdminServiceServer)

// Package adminservicemock is a generated GoMock package.
package adminservicemock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	service "github.com/zawawahoge/quiz-practice/api/app/proto/v1/service"
	reflect "reflect"
)

// MockAdminServiceServer is a mock of AdminServiceServer interface
type MockAdminServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockAdminServiceServerMockRecorder
}

// MockAdminServiceServerMockRecorder is the mock recorder for MockAdminServiceServer
type MockAdminServiceServerMockRecorder struct {
	mock *MockAdminServiceServer
}

// NewMockAdminServiceServer creates a new mock instance
func NewMockAdminServiceServer(ctrl *gomock.Controller) *MockAdminServiceServer {
	mock := &MockAdminServiceServer{ctrl: ctrl}
	mock.recorder = &MockAdminServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAdminServiceServer) EXPECT() *MockAdminServiceServerMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method
func (m *MockAdminServiceServer) CreateAccount(arg0 context.Context, arg1 *service.CreateAccountRequest) (*service.CreateAccountResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", arg0, arg1)
	ret0, _ := ret[0].(*service.CreateAccountResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccount indicates an expected call of CreateAccount
func (mr *MockAdminServiceServerMockRecorder) CreateAccount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockAdminServiceServer)(nil).CreateAccount), arg0, arg1)
}
